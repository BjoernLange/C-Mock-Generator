# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

GTEST_SRC_DIR = /usr/src/gtest
GTEST_INCLUDE_DIR = /usr/include/gtest

# Points to the location of the Google Test libraries
GTEST_LIB_DIR = /usr/lib

# Where to find user code.
USER_PROJECT_DIR = .
USER_TEST_DIR = $(USER_PROJECT_DIR)/test
USER_SRC_DIR = $(USER_PROJECT_DIR)/src
USER_INCLUDE_DIR = $(USER_PROJECT_DIR)/include
MOCK_INCLUDE_DIR = $(USER_PROJECT_DIR)/mock/include
MOCK_SRC_DIR = $(USER_PROJECT_DIR)/mock/src
USER_INCLUDES = -I$(MOCK_INCLUDE_DIR) -I$(USER_INCLUDE_DIR)


# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_INCLUDE_DIR)

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -Werror -pthread -std=c++11

# Google Test libraries
GTEST_LIBS = libgtest.a libgtest_main.a

# All tests produced by this Makefile.
TESTS = application_test

# All Google Test headers.
GTEST_HEADERS = $(GTEST_INCLUDE_DIR)/*.h \
				$(GTEST_INCLUDE_DIR)/internal/*.h

# House-keeping build targets.

all : generate_mocks $(GTEST_LIBS) $(TESTS)

clean :
	rm -f $(GTEST_LIBS) $(TESTS) *.o;
	rm -rf mock


GTEST_SRCS_ = $(GTEST_SRC_DIR)/src/*.cc $(GTEST_SRC_DIR)/src/*.h $(GTEST_HEADERS)

gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_SRC_DIR) $(CXXFLAGS) -c \
			$(GTEST_SRC_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_SRC_DIR) $(CXXFLAGS) -c \
			$(GTEST_SRC_DIR)/src/gtest_main.cc

libgtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

libgtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Generate mocks
generate_mocks :
	mkdir mock;
	mkdir mock/include;
	mkdir mock/src;
	cd ../.. && python -m c_mock_generator.generate_mock \
		-i system_tests/no_matchable_parameters/include/to_mock.h \
		-oh system_tests/no_matchable_parameters/mock/include/to_mock.h \
		-oc system_tests/no_matchable_parameters/mock/src/to_mock.c

# Build mocks
to_mock_mock.o : $(MOCK_SRC_DIR)/to_mock.c $(MOCK_INCLUDE_DIR)/to_mock.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_INCLUDES) -c $(MOCK_SRC_DIR)/to_mock.c -o to_mock_mock.o

# Build and run application tests
under_test.o : $(USER_SRC_DIR)/under_test.c $(USER_INCLUDE_DIR)/under_test.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_INCLUDES) -c $(USER_SRC_DIR)/under_test.c

under_test_test.o : $(USER_TEST_DIR)/under_test_test.c $(USER_INCLUDE_DIR)/under_test.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_INCLUDES) -c $(USER_TEST_DIR)/under_test_test.c

application_test : to_mock_mock.o under_test.o under_test_test.o $(GTEST_LIBS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -L$(GTEST_LIB_DIR) -lgtest_main -lpthread $^ -o $@
	./application_test
